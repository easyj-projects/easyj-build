<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>icu.easyj</groupId>
	<artifactId>easyj-build</artifactId>
	<version>1.0.49-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>${project.groupId} :: ${project.artifactId}</name>
	<description>为了方便其他Java项目的搭建，提供了该build，作为其他项目的父级`pom.xml`。</description>

	<properties>
		<java.version>1.8</java.version>
		<resource.delimiter>@</resource.delimiter>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


		<user.timezone>Asia/Shanghai</user.timezone>


		<!-- ********** maven-plugin Versions and Default configurations ********** -->

		<!-- icu.easyj.maven.plugins : easyj-maven-plugin -->
		<easyj-maven-plugin.version>1.0.4</easyj-maven-plugin.version>
		<maven.simplify.simplifiedPomFileName>.flattened-pom.xml</maven.simplify.simplifiedPomFileName>
		<maven.simplify.useTabIndent>true</maven.simplify.useTabIndent>

		<!-- org.springframework.boot : spring-boot-maven-plugin -->
		<spring-boot.version>2.7.1</spring-boot.version>
		<spring-boot.repackage.attach>false</spring-boot.repackage.attach><!-- 默认为true，这里设置为false -->
		<start-class/>

		<!-- org.apache.maven.plugins : maven-clean-plugin -->
		<maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
		<maven.clean.failOnError>true</maven.clean.failOnError>

		<!-- org.apache.maven.plugins : maven-checkstyle-plugin -->
		<maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
		<maven.checkstyle.skip>true</maven.checkstyle.skip>
		<maven.checkstyle.failsOnError>false</maven.checkstyle.failsOnError>
		<maven.checkstyle.failOnViolation>false</maven.checkstyle.failOnViolation>
		<!-- the dependencies for maven-checkstyle-plugin -->
		<com.puppycrawl.tools-checkstyle.version>9.3</com.puppycrawl.tools-checkstyle.version>

		<!-- org.apache.maven.plugins : maven-resources-plugin -->
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>

		<!-- org.apache.maven.plugins : maven-compiler-plugin -->
		<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
		<maven.compiler.parameters>true</maven.compiler.parameters>

		<!-- org.apache.maven.plugins : maven-surefire-plugin -->
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<argLine/>
		<maven.test.argLine>${argLine}</maven.test.argLine>
		<maven.test.timezone>${user.timezone}</maven.test.timezone>

		<!-- org.apache.maven.plugins : maven-jar-plugin & maven-war-plugin -->
		<maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
		<maven-war-plugin.version>3.3.2</maven-war-plugin.version>
		<maven.addMavenDescriptor>false</maven.addMavenDescriptor>
		<maven.jar.addMavenDescriptor>${maven.addMavenDescriptor}</maven.jar.addMavenDescriptor>
		<maven.war.addMavenDescriptor>${maven.addMavenDescriptor}</maven.war.addMavenDescriptor>

		<!-- org.apache.maven.plugins : maven-source-plugin -->
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>

		<!-- org.apache.maven.plugins : maven-javadoc-plugin -->
		<maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>
		<maven.javadoc.skip>true</maven.javadoc.skip>
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>
		<maven.javadoc.failOnWarnings>false</maven.javadoc.failOnWarnings>
		<maven.javadoc.quiet>true</maven.javadoc.quiet>

		<!-- org.apache.maven.plugins : maven-shade-plugin -->
		<maven-shade-plugin.version>3.3.0</maven-shade-plugin.version>

		<!-- org.apache.maven.plugins : maven-deploy-plugin -->
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven.deploy.skip>false</maven.deploy.skip>

		<!-- org.jacoco : jacoco-maven-plugin -->
		<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>

		<!-- com.mycila : license-maven-plugin -->
		<license-maven-plugin.version>4.1</license-maven-plugin.version>
		<maven.license.skip>false</maven.license.skip>
		<maven.license.quiet>true</maven.license.quiet>
		<maven.license.strictCheck>true</maven.license.strictCheck>

		<!-- org.owasp : dependency-check-maven -->
		<dependency-check-maven.version>7.1.1</dependency-check-maven.version>
		<maven.dependency-check.skip>true</maven.dependency-check.skip>
		<maven.dependency-check.autoUpdate>true</maven.dependency-check.autoUpdate>
		<maven.dependency-check.failOnError>false</maven.dependency-check.failOnError>

		<!-- org.sonatype.plugins : nexus-staging-maven-plugin -->
		<nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
		<maven.oss.url>https://s01.oss.sonatype.org</maven.oss.url>
		<maven.staging.serverId>ossrh</maven.staging.serverId>
		<maven.staging.nexusUrl>${maven.oss.url}</maven.staging.nexusUrl>
		<maven.staging.autoReleaseAfterClose>false</maven.staging.autoReleaseAfterClose>
		<maven.staging.skip>${maven.deploy.skip}</maven.staging.skip>
		<maven.staging.skipStaging>${maven.staging.skip}</maven.staging.skipStaging>
		<maven.staging.skipLocalStaging>${maven.staging.skip}</maven.staging.skipLocalStaging>
		<maven.staging.skipRemoteStaging>${maven.staging.skip}</maven.staging.skipRemoteStaging>
		<maven.staging.skipNexusStagingDeployMojo>${maven.staging.skip}</maven.staging.skipNexusStagingDeployMojo>
		<maven.staging.skipStagingRepositoryClose>${maven.staging.skip}</maven.staging.skipStagingRepositoryClose>

		<!-- org.apache.maven.plugins : maven-gpg-plugin -->
		<maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
		<maven.gpg.skip>${maven.deploy.skip}</maven.gpg.skip>
		<maven.gpg.keyname/>
		<maven.gpg.passphrase/>
		<maven.gpg.passphraseServerId/>
		<maven.gpg.arg1/>
		<maven.gpg.arg2/>
	</properties>

	<url>https://easyj.icu</url>

	<inceptionYear>2021</inceptionYear>

	<organization>
		<name>EasyJ开源社区</name>
		<url>https://github.com/easyj-projects</url>
	</organization>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>wangliang181230</id>
			<name>王良</name>
			<email>841369634@qq.com</email>
			<url>https://github.com/wangliang181230</url>
			<organization>浙江蕙康科技有限公司</organization>
			<organizationUrl>https://www.jyhk.com</organizationUrl>
			<roles>
				<role>Java架构师</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<connection>scm:git@github.com:easyj-projects/easyj-build.git</connection>
		<developerConnection>scm:git@github.com:easyj-projects/easyj-build.git</developerConnection>
		<url>https://github.com/easyj-projects/easyj-build</url>
	</scm>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/easyj-projects/easyj-build/issues</url>
	</issueManagement>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${basedir}/src/main/webapp</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!-- 插件定义：EasyJ -->
				<plugin>
					<groupId>icu.easyj.maven.plugins</groupId>
					<artifactId>easyj-maven-plugin</artifactId>
					<version>${easyj-maven-plugin.version}</version>
					<executions>
						<!-- maven-clean-plugin 已经配置了清理该文件
						<execution>
							<id>clean-simplify-pom</id>
							<phase>clean</phase>
							<goals>
								<goal>clean-simplify-pom</goal>
							</goals>
						</execution>-->
						<execution>
							<id>simplify-pom</id>
							<phase>process-resources</phase>
							<goals>
								<goal>simplify-pom</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：Spring Boot -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<configuration>
						<attach>${spring-boot.repackage.attach}</attach>
						<mainClass>${start-class}</mainClass>
					</configuration>
					<executions>
						<execution>
							<id>repackage</id>
							<phase>package</phase>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：Clean -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
					<configuration>
						<failOnError>${maven.clean.failOnError}</failOnError>
						<filesets>
							<fileset>
								<directory>./</directory>
								<includes>
									<include>dependency-reduced-pom.xml</include>
									<include>.flattened-pom.xml</include>
								</includes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<!-- 插件定义：Resources -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<delimiters>
							<delimiter>${resource.delimiter}</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
				</plugin>
				<!-- 插件定义：Compiler -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<!-- 插件定义：Surefire -->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<argLine>${maven.test.argLine}</argLine>
						<systemPropertyVariables>
							<user.timezone>${maven.test.timezone}</user.timezone>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<!-- 插件定义：Jar -->
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>${maven.jar.addMavenDescriptor}</addMavenDescriptor>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
						<excludes>
							<exclude>**/META-INF/additional-spring-configuration-metadata.json</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- 插件定义：War -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>${maven.war.addMavenDescriptor}</addMavenDescriptor>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- 插件定义：Source -->
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：Javadoc -->
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<skip>${maven.javadoc.skip}</skip>
						<failOnError>${maven.javadoc.failOnError}</failOnError>
						<failOnWarnings>${maven.javadoc.failOnWarnings}</failOnWarnings>
						<quiet>${maven.javadoc.quiet}</quiet>
						<charset>${project.build.sourceEncoding}</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>${project.build.sourceEncoding}</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：Shade -->
				<plugin>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
					<configuration>
						<keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
						<createDependencyReducedPom>true</createDependencyReducedPom>
						<filters>
							<filter>
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
								</excludes>
							</filter>
						</filters>
					</configuration>
				</plugin>
				<!-- 插件定义：Deploy -->
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- 插件定义：Checkstyle -->
				<plugin>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<skip>${maven.checkstyle.skip}</skip>
						<failsOnError>${maven.checkstyle.failsOnError}</failsOnError>
						<failOnViolation>${maven.checkstyle.failOnViolation}</failOnViolation>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${com.puppycrawl.tools-checkstyle.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>validate</id>
							<phase>validate</phase>
							<configuration>
								<configLocation>${user.dir}/src/checkstyle/checkstyle.xml</configLocation>
								<suppressionsLocation>${user.dir}/src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
								<encoding>UTF-8</encoding>
								<consoleOutput>true</consoleOutput>
								<failsOnError>false</failsOnError>
							</configuration>
							<goals>
								<goal>checkstyle</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：JaCoCo 测试覆盖度 -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：License -->
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<skip>${maven.license.skip}</skip>
						<quiet>${maven.license.quiet}</quiet>
						<strictCheck>${maven.license.strictCheck}</strictCheck>
						<header>${user.dir}/src/license/copyright.txt</header>
						<includes>
							<include>**/src/main/java/**</include>
							<include>**/src/test/java/**</include>
						</includes>
						<mapping>
							<java>SLASHSTAR_STYLE</java>
						</mapping>
					</configuration>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>remove</goal>
								<goal>format</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：dependency-check -->
				<plugin>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>${dependency-check-maven.version}</version>
					<configuration>
						<skip>${maven.dependency-check.skip}</skip>
						<autoUpdate>${maven.dependency-check.autoUpdate}</autoUpdate>
						<failOnError>${maven.dependency-check.failOnError}</failOnError>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 插件定义：Nexus-Staging -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>${maven.staging.serverId}</serverId>
						<nexusUrl>${maven.staging.nexusUrl}</nexusUrl>
						<autoReleaseAfterClose>${maven.staging.autoReleaseAfterClose}</autoReleaseAfterClose>
						<skipStaging>${maven.staging.skipStaging}</skipStaging>
						<skipLocalStaging>${maven.staging.skipLocalStaging}</skipLocalStaging>
						<skipRemoteStaging>${maven.staging.skipRemoteStaging}</skipRemoteStaging>
						<skipNexusStagingDeployMojo>${maven.staging.skipNexusStagingDeployMojo}</skipNexusStagingDeployMojo>
						<skipStagingRepositoryClose>${maven.staging.skipStagingRepositoryClose}</skipStagingRepositoryClose>
					</configuration>
				</plugin>
				<!-- 插件定义：GPG -->
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
							<configuration>
								<skip>${maven.gpg.skip}</skip>
								<keyname>${maven.gpg.keyname}</keyname>
								<passphrase>${maven.gpg.passphrase}</passphrase>
								<passphraseServerId>${maven.gpg.passphraseServerId}</passphraseServerId>
								<gpgArguments>
									<arg>${maven.gpg.arg1}</arg>
									<arg>${maven.gpg.arg2}</arg>
								</gpgArguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- 使用插件：EasyjJ -->
			<plugin>
				<groupId>icu.easyj.maven.plugins</groupId>
				<artifactId>easyj-maven-plugin</artifactId>
			</plugin>
			<!-- 使用插件：Clean -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<!-- 使用插件：Compiler -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 使用插件：Javadoc -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<!-- 使用插件：Checkstyle -->
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<!-- 使用插件：dependency-check -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- profile: Auto adjust code -->
		<profile>
			<id>autocode</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：License -->
					<plugin>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile: Check -->
		<profile>
			<id>check</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.clean.failOnError>false</maven.clean.failOnError>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.javadoc.failOnWarnings>true</maven.javadoc.failOnWarnings>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
				<maven.dependency-check.skip>false</maven.dependency-check.skip>
			</properties>
		</profile>

		<!-- profile: CI/CD -->
		<profile>
			<id>cicd</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：JaCoCo -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile: CI/CD -->
		<profile>
			<id>cicd8</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：JaCoCo -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile: api-doc -->
		<profile>
			<id>api-doc</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.clean.failOnError>false</maven.clean.failOnError>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>

		<!-- profile: release-local -->
		<profile>
			<id>release-local</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>true</maven.javadoc.skip>
				<maven.checkstyle.skip>true</maven.checkstyle.skip>
				<maven.dependency-check.skip>true</maven.dependency-check.skip>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：Source -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile: Release-KT -->
		<profile>
			<id>release-kt</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：Source -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<!--资源上传管理-->
			<distributionManagement>
				<repository>
					<id>kt-nexus</id>
					<url>http://10.1.50.116:8082/nexus/content/repositories/releases</url>
				</repository>
				<snapshotRepository>
					<id>kt-nexus</id>
					<uniqueVersion>false</uniqueVersion>
					<url>http://10.1.50.116:8082/nexus/content/repositories/snapshots</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>

		<!-- profile: Release-KT2 -->
		<profile>
			<id>release-kt2</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：Source -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<!--资源上传管理-->
			<distributionManagement>
				<repository>
					<id>kt2-nexus</id>
					<url>http://10.1.51.186:8081/nexus/content/repositories/releases/</url>
				</repository>
				<snapshotRepository>
					<id>kt2-nexus</id>
					<uniqueVersion>false</uniqueVersion>
					<url>http://10.1.51.186:8081/nexus/content/repositories/snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>

		<!-- profile: Release-OSSRH -->
		<profile>
			<id>release-ossrh</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：Source -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<!-- 使用插件：Nexus-Staging -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
					<!-- 使用插件：GPG -->
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile: publish -->
		<profile>
			<id>publish</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
				<maven.gpg.arg1>--pinentry-mode</maven.gpg.arg1>
				<maven.gpg.arg2>loopback</maven.gpg.arg2>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：Source -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<!-- 使用插件：Nexus-Staging -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
					<!-- 使用插件：GPG -->
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile: publish-auto -->
		<profile>
			<id>publish-auto</id>
			<properties>
				<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
				<maven.javadoc.skip>false</maven.javadoc.skip>
				<maven.javadoc.failOnError>true</maven.javadoc.failOnError>
				<maven.checkstyle.skip>false</maven.checkstyle.skip>
				<maven.checkstyle.failsOnError>true</maven.checkstyle.failsOnError>
				<maven.checkstyle.failOnViolation>true</maven.checkstyle.failOnViolation>
				<maven.staging.autoReleaseAfterClose>true</maven.staging.autoReleaseAfterClose>
				<maven.gpg.arg1>--pinentry-mode</maven.gpg.arg1>
				<maven.gpg.arg2>loopback</maven.gpg.arg2>
			</properties>
			<build>
				<plugins>
					<!-- 使用插件：Source -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<!-- 使用插件：Nexus-Staging -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
					<!-- 使用插件：GPG -->
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- OSSRH仓库地址配置 -->
	<distributionManagement>
		<repository>
			<id>ossrh</id>
			<url>${maven.oss.url}/service/local/staging/deploy/maven2</url>
		</repository>
		<snapshotRepository>
			<id>ossrh</id>
			<uniqueVersion>false</uniqueVersion>
			<url>${maven.oss.url}/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>